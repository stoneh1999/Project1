Named colors — there are 147 named colors, which you can review here.

Hexadecimal or hex colors

Hexadecimal is a number system with has sixteen digits, 0 to 9 followed by "A" to "F".
Hex values always begin with # and specify values of red, blue and green using hexademical numbers such as #23F41A.
RGB

RGB colors use the rgb() syntax with one value for red, one value for blue and one value for green.
RGB values range from 0 to 255 and look like this: rgb(7, 210, 50).
HSL

HSL stands for hue (the color itself), saturation (the intensity of the color), and lightness (how light or dark a color is).
Hue ranges from 0 to 360 and saturation and lightness are both represented as percentages like this: hsl(200, 20%, 50%).
You can add opacity to color in RGB and HSL by adding a fourth value, a, which is represented as a percentage.

Great job! Feel empowered to add a bit of color to each of your projects!


Let's review what you've learned so far:

Typography is the art of arranging text on a page.

Text can appear in any number of weights, with the font-weight property.

Text can appear in italics with the font-style property.

The vertical spacing between lines of text can be modified with the line-height property.

Serif fonts have extra details on the ends of each letter. Sans-Serif fonts do not.

Fallback fonts are used when a certain font is not installed on a user's computer.

Google Fonts provides free fonts that can be used in an HTML file with the <link> tag or the @font-face property.

Local fonts can be added to a document with the @font-face property and the path to the font's source.

The word-spacing property changes how far apart individual words are.

The letter-spacing property changes how far apart individual letters are.


The text-align property changes where text horizontally on a page.




GRIDs
grid-template-columns
grid-template-rows
grid-template
grid-template-area
grid-gap
grid-row-start / grid-row-end
grid-column-start / grid-column-end
grid-area


This is how grid-area will interpret those values.

grid-row-start
grid-column-start
grid-row-end
grid-column-end

At this point, we've covered a great deal of different ways to manipulate the grid and the items inside it to create interesting layouts.

grid-template-columns defines the number and sizes of the columns of the grid
grid-template-rows defines the number and sizes of the rows of the grid
grid-template is a shorthand for defining both grid-template-columns and grid-template-rows in one line
grid-gap puts blank space between rows and/or columns of the grid
grid-row-start and grid-row-end makes elements span certain rows of the grid
grid-column-start and grid-column-end makes elements span certain columns of the grid
grid-area is a shorthand for grid-row-start, grid-column-start, grid-row-end, and grid-column-end, all in one line
You have seen how to set up and fill in a grid and you now have one more CSS positioning technique to add to your toolkit! Let's do some practice to solidify these skills.